<!-- ==================================================
      HybridClockPage.xaml (c) 2006 by Charles Petzold
     ================================================== -->
<Page x:Class="Petzold.HybridClock.HybridClockPage"
      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      xmlns:src="clr-namespace:Petzold.HybridClock" 
      WindowTitle="Hybrid Analog/Digital Clock"
      Title="Hybrid Analog/Digital Clock" 
      Background="Pink">

    <!-- Resource for class that provides current time. -->
    <Page.Resources>
        <src:ClockTicker x:Key="clock" />
    </Page.Resources>

    <!-- ToolTip has program copyright notice. -->
    <Page.ToolTip>
        <TextBlock TextAlignment="Center">
            Hybrid Analog/Digital Clock
            <LineBreak />&#x00A9; 2006 by Charles Petzold
            <LineBreak />www.charlespetzold.com
        </TextBlock>
    </Page.ToolTip>

    <Viewbox>
        <!-- Outer single-cell grid encompasses the whole clock face. -->
        <Grid>
            <Ellipse>
                <Ellipse.Fill>
                    <SolidColorBrush Color="{x:Static 
                        src:HybridClockPage.clrBackground}" />

                    <!-- Unfortunately, this radial brush hurt performance. -->
                    <!-- RadialGradientBrush GradientOrigin="0.4, 0.4">
                        <RadialGradientBrush.GradientStops>
                            <GradientStop Offset="0" Color="White" />
                            <GradientStop Offset="1" 
                                Color="{x:Static 
                                src:HybridClockPage.clrBackground}" />
                        </RadialGradientBrush.GradientStops>
                    </RadialGradientBrush -->
                       
                </Ellipse.Fill>
            </Ellipse>

            <!-- This inner single-cell Grid is sized by the text width. -->
            <Grid Name="grd" Margin="12">

                <!-- Make two invisible horizontal date/time strings. -->
                <StackPanel Orientation="Horizontal" Opacity="0"
                            VerticalAlignment="Center">
                    <TextBlock Name="datetime"
                               Text="{Binding Source={StaticResource clock},
                                              Path=DateTime}" />
                    <TextBlock Text="{Binding ElementName=datetime, 
                                              Path=Text}" />
                </StackPanel>

                <!-- Make two invisible vertical date/time strings. -->
                <StackPanel Orientation="Horizontal" Opacity="0"
                            HorizontalAlignment="Center">
                    <TextBlock Text="{Binding ElementName=datetime, 
                                              Path=Text}" />
                    <TextBlock Text="{Binding ElementName=datetime, 
                                              Path=Text}" />
                    <StackPanel.LayoutTransform>
                        <RotateTransform Angle="90" />
                    </StackPanel.LayoutTransform>
                </StackPanel>

                <!-- Make two rotatable date/time strings. -->
                <StackPanel Orientation="Horizontal"
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center"
                            StackPanel.RenderTransformOrigin="0.5 0.5">
                    <TextBlock Text="{Binding ElementName=datetime, Path=Text}"
                               Opacity="0" />
                    <TextBlock Text="{Binding ElementName=datetime, Path=Text}"
                               Name="txt1" Opacity="0.5"/>

                    <StackPanel.RenderTransform>
                        <RotateTransform x:Name="xform1"/>
                    </StackPanel.RenderTransform>
                </StackPanel>

                <!-- Make two more rotatable date/time strings. -->
                <StackPanel Orientation="Horizontal"
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center"
                            RenderTransformOrigin="0.5 0.5">
                    <TextBlock Text="{Binding ElementName=datetime, Path=Text}"
                               Name="txt2"
                               Opacity="0.5" />
                    <TextBlock Text="{Binding ElementName=datetime, Path=Text}"
                               Opacity="0" />

                    <StackPanel.RenderTransform>
                        <RotateTransform x:Name="xform2"/>
                    </StackPanel.RenderTransform>
                </StackPanel>
            </Grid>

            <!-- Rotatable mask (defined in code). -->
            <Ellipse Name="mask"
                     RenderTransformOrigin="0.5 0.5" >
                <Ellipse.RenderTransform>
                    <RotateTransform x:Name="xform3"/>
                </Ellipse.RenderTransform>
            </Ellipse>
        </Grid>
    </Viewbox>
    
    <Page.Triggers>
        <EventTrigger RoutedEvent="Page.Loaded">
            <BeginStoryboard>
                <Storyboard x:Name="storyboard">

                    <!-- Double animations turn the text and opacity mask. -->
                    <DoubleAnimation Storyboard.TargetName="xform1"
                                     Storyboard.TargetProperty="Angle"
                                     From="-90" To="270" Duration="0:1:0"
                                     RepeatBehavior="Forever" />

                    <DoubleAnimation Storyboard.TargetName="xform2"
                                     Storyboard.TargetProperty="Angle"
                                     From="-270" To="90" Duration="0:1:0"
                                     RepeatBehavior="Forever" />

                    <DoubleAnimation Storyboard.TargetName="xform3"
                                     Storyboard.TargetProperty="Angle"
                                     From="-90" To="270" Duration="0:1:0"
                                     RepeatBehavior="Forever" />

                    <!-- Key frame animations do fades. -->
                    <DoubleAnimationUsingKeyFrames 
                            Storyboard.TargetName="txt1"
                            Storyboard.TargetProperty="Opacity"
                            Duration="0:1:0" RepeatBehavior="Forever">
                        <LinearDoubleKeyFrame Value="1" KeyTime="0:0:0.5" />
                        <DiscreteDoubleKeyFrame Value="1" KeyTime="0:0:29.5" />
                        <LinearDoubleKeyFrame Value="0" KeyTime="0:0:30.5" />
                        <DiscreteDoubleKeyFrame Value="0" KeyTime="0:0:59.5" />
                        <LinearDoubleKeyFrame Value="0.5" KeyTime="0:1:0" />
                    </DoubleAnimationUsingKeyFrames>

                    <DoubleAnimationUsingKeyFrames 
                            Storyboard.TargetName="txt2"
                            Storyboard.TargetProperty="Opacity"
                            Duration="0:1:0" RepeatBehavior="Forever">
                        <LinearDoubleKeyFrame Value="0" KeyTime="0:0:0.5" />
                        <DiscreteDoubleKeyFrame Value="0" KeyTime="0:0:29.5" />
                        <LinearDoubleKeyFrame Value="1" KeyTime="0:0:30.5" />
                        <DiscreteDoubleKeyFrame Value="1" KeyTime="0:0:59.5" />
                        <LinearDoubleKeyFrame Value="0.5" KeyTime="0:1:0" />
                    </DoubleAnimationUsingKeyFrames>
                </Storyboard>
            </BeginStoryboard>
        </EventTrigger>
    </Page.Triggers>
</Page>
